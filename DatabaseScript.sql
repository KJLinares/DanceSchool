-- MySQL Script generated by MySQL Workbench
-- Mon Mar 26 11:15:36 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DanceSchoolDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DanceSchoolDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DanceSchoolDB` DEFAULT CHARACTER SET utf8 ;
USE `DanceSchoolDB` ;

-- -----------------------------------------------------
-- Table `DanceSchoolDB`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DanceSchoolDB`.`user` (
  `username` VARCHAR(10) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `user_type` VARCHAR(45) NOT NULL,
  `salt` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DanceSchoolDB`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DanceSchoolDB`.`employee` (
  `employee_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `preferred_schedule` VARCHAR(45) NOT NULL,
  `username` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`employee_id`),
  INDEX `fk_employee_user_idx` (`username` ASC),
  CONSTRAINT `fk_employee_user`
    FOREIGN KEY (`username`)
    REFERENCES `DanceSchoolDB`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DanceSchoolDB`.`student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DanceSchoolDB`.`student` (
  `student_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `username` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`student_id`),
  INDEX `fk_student_user1_idx` (`username` ASC),
  CONSTRAINT `fk_student_user1`
    FOREIGN KEY (`username`)
    REFERENCES `DanceSchoolDB`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DanceSchoolDB`.`course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DanceSchoolDB`.`course` (
  `course_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `schedule` VARCHAR(100) NOT NULL,
  `price` DOUBLE NULL,
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`course_id`),
  INDEX `fk_course_employee1_idx` (`employee_id` ASC),
  CONSTRAINT `fk_course_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `DanceSchoolDB`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DanceSchoolDB`.`cancelation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DanceSchoolDB`.`cancelation` (
  `course_id` INT NOT NULL,
  `cancelation_date` DATETIME NOT NULL,
  INDEX `fk_cancelation_course1_idx` (`course_id` ASC),
  PRIMARY KEY (`course_id`, `cancelation_date`),
  CONSTRAINT `fk_cancelation_course1`
    FOREIGN KEY (`course_id`)
    REFERENCES `DanceSchoolDB`.`course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DanceSchoolDB`.`student_course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DanceSchoolDB`.`student_course` (
  `student_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`student_id`, `course_id`),
  INDEX `fk_student_has_course_course1_idx` (`course_id` ASC),
  INDEX `fk_student_has_course_student1_idx` (`student_id` ASC),
  CONSTRAINT `fk_student_has_course_student1`
    FOREIGN KEY (`student_id`)
    REFERENCES `DanceSchoolDB`.`student` (`student_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_student_has_course_course1`
    FOREIGN KEY (`course_id`)
    REFERENCES `DanceSchoolDB`.`course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
